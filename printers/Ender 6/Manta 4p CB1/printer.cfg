# This file contains pin mappings for the stock 2020 Creality Ender 6.
# To use this config, during "make menuconfig" select the STM32F103
# with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# Because this printer has factory wiring, mounts, and firmware for
# a BLTouch, but does not ship with one at this time, default values
# for the sensor have been specified, but disabled, in anticipation of
# future revisions or user modification. User should take care to
# customize the offsets, particularly z-offset, for their specific unit.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.
[tmc5160 stepper_y]
cs_pin: PB12
spi_bus: spi1
#diag1_pin: PG6
run_current: 0.800
stealthchop_threshold: 999999

[tmc5160 stepper_x]
cs_pin: PC10
spi_bus: spi1
#diag1_pin: PG9
run_current: 0.800
stealthchop_threshold: 999999

[tmc5160 stepper_z]
cs_pin: PC9
spi_bus: spi1
#diag1_pin: PG10
run_current: 0.650
stealthchop_threshold: 999999

[tmc5160 extruder]
cs_pin: PA13
spi_bus: spi1
#diag1_pin: PC15
run_current: 0.650
stealthchop_threshold: 999999
[stepper_x]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 245
homing_speed: 50
# [tmc5160 stepper_x]
# cs_pin: PB12
# run_current: 0.800
# stealthchop_threshold: 999999

[stepper_y]
step_pin: PC6
dir_pin: !PA14
enable_pin: !PC7
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 245
homing_speed: 50
# [tmc5160 stepper_y]
# cs_pin: PC10
# run_current: 0.800
# stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
position_endstop: 0.0                     # disable to use BLTouch
endstop_pin: ^PC2                         # disable to use BLTouch
# endstop_pin: probe:z_virtual_endstop    # enable to use BLTouch
# position_min: -5                        # enable to use BLTouch
position_max: 400
# [tmc5160 stepper_z]
# cs_pin: PC9
# run_current: 0.800
# stealthchop_threshold: 999999

[safe_z_home]                           # enable for BLTouch
home_xy_position: 0,0
speed: 100
z_hop: 10
z_hop_speed: 5

[bltouch]                               # enable for BLTouch
sensor_pin: ^PC14
control_pin: PA1
x_offset: 20
y_offset: -7
z_offset: 3.60
speed: 3.0

[bed_mesh]                              # enable for BLTouch
speed: 100
mesh_min: 20, -7
mesh_max: 220, 233
algorithm: bicubic
probe_count: 5, 5

[extruder]
# MOTOR3
max_extrude_only_distance: 1000.0
step_pin: PB3
dir_pin: PB4
enable_pin: !PD5
microsteps: 16
rotation_distance: 3.4334
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control = pid
pid_kp = 20.344
pid_ki = 0.935
pid_kd = 110.618
min_temp: 0
max_temp: 260
# [tmc5160 extruder]
# cs_pin: PA13
# run_current: 0.8
# stealthchop_threshold: 0

[heater_bed]
# BED_OUT
heater_pin: PD8
# TB
sensor_pin: PC4
sensor_type: EPCOS 100K B57560G104F
control: pid
pid_Kp: 327.11
pid_Ki: 19.20
pid_Kd: 1393.45
min_temp: 0
max_temp: 100


[fan]
pin: PD2

[heater_fan nozzle_cooling_fan]
pin: PD3
heater: extruder
heater_temp: 50.0


[fan_generic mcu_fan]

pin:PC15
[fan_generic back_fan]
pin: PD4

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

[temperature_sensor host_temp]
sensor_type: temperature_host

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2F0022001050415833323520-if00

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 1500
max_z_velocity: 10
max_z_accel: 100

# [bed_screws]
# screw1: 25 , 25
# screw2: 25, 225
# screw4: 225, 25
# screw3: 225,225
[virtual_sdcard]
path: ~/gcode_files

# [neopixel mainlight]
# pin: PB0
# chain_count:7
# color_order: GRBW
# initial_WHITE: 1

[gcode_macro PRINT_LED]
gcode:
  SET_LED LED=mainlight GREEN=0 RED=0 BLUE=1 WHITE=0.8
[gcode_macro HEAT_LED]
gcode:
  SET_LED LED=mainlight GREEN=0.3 RED=1 BLUE=0 WHITE=0
[gcode_macro FINISH_LED]
gcode:
  SET_LED LED=mainlight GREEN=1 RED=0 BLUE=0 WHITE=0.1
[display_status]
[pause_resume]
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G91
  G1 Z10 F500
  G28 X Y
  M84
  SET_LED LED=mainlight GREEN=0 RED=1 BLUE=0 WHITE=0.2
  G90
[delayed_gcode fanon]
initial_duration: 1
gcode:
  SET_FAN_SPEED FAN=mcu_fan SPEED=0.37

[gcode_macro PRINT_PURGE_LINE]
gcode:
  SET_LED LED=mainlight GREEN=1 RED=1 BLUE=0 WHITE=0
  M82 ;absolute extrusion mode
  G28 ;Home
  SET_LED LED=mainlight GREEN=0 RED=0 BLUE=1 WHITE=0.5
  G92 E0 ;Reset Extruder
  G1 Z2.0 F3000 ;Move Z Axis up
  G1 X250.1 Y20 Z0.28 F5000.0 ;Move to start position
  G1 X250.1 Y200.0 Z0.28 F1500.0 E15 ;Draw the first line
  G1 X250.4 Y200.0 Z0.28 F5000.0 ;Move to side a little
  G1 X250.4 Y20 Z0.28 F1500.0 E30 ;Draw the second line
  G92 E0 ;Reset Extruder
  G1 Z2.0 F3000 ;Move Z Axis up
  SET_LED LED=mainlight GREEN=1 RED=0 BLUE=1 WHITE=0
  G28 X Y
  G1 Z10.0 F3000 ;Move Z Axis up
  SET_LED LED=mainlight GREEN=1 RED=0 BLUE=0 WHITE=0.1
  G90

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.047500, 0.007500, 0.127500, 0.275000, 0.442500
#*# 	  0.027500, 0.085000, 0.157500, 0.247500, 0.355000
#*# 	  0.047500, 0.082500, 0.125000, 0.190000, 0.230000
#*# 	  0.042500, 0.052500, 0.067500, 0.100000, 0.115000
#*# 	  0.017500, -0.027500, -0.020000, -0.030000, -0.005000
#*# tension = 0.2
#*# min_x = 20.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = -7.0
#*# x_count = 5
#*# max_y = 233.0
#*# mesh_x_pps = 2
#*# max_x = 220.0
